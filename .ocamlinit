(*
   #directory "/home/jrrk2/.opam/system/lib/xml-light";;
*)
#print_depth 100000;;
#print_length 1000000;;

open Vxml

let xmlf = "/home/jonathan/xcvr_digits/baseband/resample/fpga/rx_resample_elab.xml";;

let errlst = ref [];;
let (line,range,rwxml,xml,mods,toplst,topattr) = Vxml.translate errlst xmlf;;

let noflst = List.filter (function VAR(_, "tap" :: _, _, _) :: tl -> true | _ -> false) !forlst';;
   
let f k = Hashtbl.find Vxml.modules_opt k;;
let p k = Hashtbl.find Vxml.packages k;;
let d f = Vxml.debug f (Hashtbl.find Vxml.modules_opt f)
let h k = Hashtbl.find Vxml.hierarchy k;;

let othcnt = (
List.length !exprothlst,
List.length !stmtothlst,
List.length !portothlst,
List.length !iothlst,
List.length !csothlst,
List.length !bgnothlst,
List.length !itmothlst,
List.length !catothlst,
List.length !cellothlst,
List.length !posneglst,
List.length !typothlst,
List.length !memothlst
);;

let oldmod = ref [];;
Hashtbl.iter (fun k _ -> oldmod := k :: !oldmod) Vxml.modules;;
let oldmod = !oldmod;;

(*
let (x,modul) = Hashtbl.find modules "plic_find_max";;
let wlst = ref [];;
List.iter (fun (id, (origin, typ', kind', n)) -> wlst := (id,typ',findmembers' typ') :: !wlst)  !(modul.v);;
wlst;;
*)

let xml = match !itmopt with Some x -> x | None -> [];;
let xml' = optitm' false xml;;
